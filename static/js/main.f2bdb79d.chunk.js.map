{"version":3,"sources":["components/tooltip/styles.module.scss","components/sentence/styles.module.scss","components/image-card/styles.module.scss","components/dictionary-app/styles.module.scss","components/link-button/styles.module.scss","components/suggested-words/styles.module.scss","components/app/styles.module.scss","dictionaries/de-ru.js","dictionaries/ru-de.js","components/link-button/index.js","components/suggested-words/index.js","utils/dictionary.js","components/tooltip/index.js","components/translation-tooltip/index.js","components/sentence/index.js","api/unsplash.js","components/spinner/index.js","components/image-card/index.js","components/dictionary-app/index.js","components/app/index.js","index.js"],"names":["module","exports","tooltipContainer","tooltip","word","imageCard","spinnerContainer","dictionaryApp","translationSection","mainTranslationSection","left","noWordMessage","linkButton","suggestedWords","wordInput","dictionaryContainer","wordInputContainer","dictionary","app","right","deRu","hund","translation","description","plural","expressions","imgQuery","schwein","bellen","kommen","katze","maus","sack","ruDe","собака","свинья","лаять","приходить","кошка","мышь","мешок","LinkButton","_ref","onClick","className","children","restProps","Object","objectWithoutProperties","react_default","a","createElement","assign","classNames","styles","href","event","preventDefault","SuggestedWords","state","words","showRandomizedWords","_this$props","_this","props","wordToExclude","count","filteredWords","keys","filter","updatedWords","shuffle","slice","setState","this","setInterval","onWordChange","style","overflow","renderprops","config","duration","items","from","top","position","opacity","enter","leave","height","div","key","link_button","React","Component","defaultProps","isWordInDictionary","getTranslationDetails","lowercaseWord","toLowerCase","ruDeDict","deRuDict","getTranslation","Tooltip","text","TranslationTooltip","Sentence","sentence","split","map","index","lowerCaseWord","isWordInAnyDictionary","translation_tooltip","axios","create","baseURL","headers","Authorization","Spinner","ImageCard","image","loading","onShowUnsplashImg","_callee","imageQuery","response","regenerator_default","wrap","_context","prev","next","unsplash","get","params","query","sent","data","results","stop","onImageLoaded","prevProps","_this$state","spinner","id","alt","src","urls","regular","onLoad","DictionaryApp","wordDetails","_useState","useState","_useState2","slicedToArray","isImageShown","setIsImageShown","image_card","sentence_Sentence","ENTER_KEY_CODE","App","inputText","wordToTranslate","suggestedWord","onChange","value","target","checkTranslation","onKeyUp","keyCode","spellCheck","placeholder","dictionary_app","suggested_words","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f2bdb79d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltipContainer\":\"styles_tooltipContainer__3jd3m\",\"tooltip\":\"styles_tooltip__Ewhq8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"word\":\"styles_word__Idl0f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageCard\":\"styles_imageCard__3Z0py\",\"spinnerContainer\":\"styles_spinnerContainer__3Opq-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dictionaryApp\":\"styles_dictionaryApp__13RIh\",\"translationSection\":\"styles_translationSection__q59-p\",\"mainTranslationSection\":\"styles_mainTranslationSection__3aTnQ\",\"left\":\"styles_left__139tg\",\"imageCard\":\"styles_imageCard__uY3k_\",\"noWordMessage\":\"styles_noWordMessage__2S64y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkButton\":\"styles_linkButton__ov8e4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"suggestedWords\":\"styles_suggestedWords__2Y6Oh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wordInput\":\"styles_wordInput__1n2mf\",\"dictionaryContainer\":\"styles_dictionaryContainer__3XX-Z\",\"wordInputContainer\":\"styles_wordInputContainer__2mNam\",\"dictionary\":\"styles_dictionary__14w1G\",\"app\":\"styles_app__1F5f6\",\"right\":\"styles_right__2bm83\"};","export const deRu = {\n  'hund': {\n    translation : 'Собака',\n    description: 'Тут что-то про собак',\n    plural: null,\n    expressions: [\n      'Собака кусает не для сытости, а для лихости',\n      'Молодая собака от старых лаять учится'\n    ],\n    imgQuery: 'dog',\n  },\n  'schwein': {\n    translation: 'Свинья',\n    plural: null,\n    description: 'Тут что-то про свиней',\n    expressions: [\n      'Свинья — крестьянская копилка',\n      'Было бы корыто, а свиньи будут'\n    ],\n    imgQuery: 'pig',\n  },\n  'bellen': {\n    translation: 'лаять',\n    plural: null,\n    description: 'Звуки, которые издает собака',\n    expressions: [\n      'Собака лает — ветер носит',\n      'Лающая собака реже кусает',\n    ],\n    imgQuery: '',\n  },\n  'kommen': {\n    translation: 'приходить',\n    plural: null,\n    description: 'Означает движение куда-либо',\n    expressions: [\n      'Приходить домой',\n      'Приходить на работу'\n    ],\n    imgQuery: '',\n  },\n  'katze': {\n    translation: 'кошка',\n    plural: null,\n    description: 'Тут что-то про кошек',\n    expressions: [\n      'Доброе слово и кошке приятно',\n      'Где нет кошки, там мышь резвится'\n    ],\n    imgQuery: 'cat',\n  },\n  'maus': {\n    translation: 'мышь',\n    plural: null,\n    description: 'Тут что-то про мышей',\n    expressions: [\n      'Был бы хлеб, а мыши будут',\n      'Худа та мышь, которая одну лазею знает'\n    ],\n    imgQuery: 'mouse',\n  },\n  'sack': {\n    translation: 'мешок',\n    plural: null,\n    description: 'Тут что-то про мешки',\n    expressions: [\n      'Купить кота в мешке',\n      'Шила в мешке не утаишь'\n    ],\n    imgQuery: 'sack',\n  },\n};\n\nexport default deRu;\n","export const ruDe = { \n  'собака': {\n    translation: 'Hund',\n    plural: '-e',\n    description: 'Hier ist etwas über Hunde',\n    expressions: [\n      'auf den Hund kommen',\n      'Hunde, die bellen, beißen nicht',\n      'jd ist bekannt wie ein bunter Hund'\n    ],\n    imgQuery: 'dog',\n  },\n  'свинья': {\n    translation: 'Schwein',\n    plural: '-e',\n    description: 'Hier ist etwas über Schweine',\n    expressions: [\n      'Schwein haben',\n      'Die Schweine von heute sind die Schinken von morgen'\n    ],\n    imgQuery: 'pig',\n  },\n  'лаять': {\n    translation: 'bellen',\n    plural: null,\n    description: 'ein Hund bellt z.B.',\n    expressions: [\n      'Eine Löwin dreht sich nicht um, wenn Hunde bellen, sondern nur wen Ihr Löwe brüllt',\n      'Wenn ein alter Hund bellt, soll man hinausschauen'\n    ],\n    imgQuery: '',\n  },\n  'приходить': {\n    translation: 'kommen',\n    plural: null,\n    description: 'Bedeutet eine Bewegung nach irgendwelcher Richtung',\n    expressions: [\n      'Auf seine Kosten kommen',\n      'Auf die Welt kommen',\n      'Sie kamen sich näher'\n    ],\n    imgQuery: '',\n  },\n  'кошка': {\n    translation: 'Katze',\n    plural: '-en',\n    description: 'Hier ist etwas über Katzen',\n    expressions: [\n      'die Katze im Sack kaufen',\n      'die Katze aus dem Sack lassen'\n    ],\n    imgQuery: 'cat',\n  },\n  'мышь': {\n    translation: 'Maus',\n    plural: '-Mäuse',\n    description: 'Hier ist etwas über Mäuse',\n    expressions: [\n      'Katz-und-Maus-Spiel',\n      'mit der Maus klicken'\n    ],\n    imgQuery: 'mouse',\n  },\n    'мешок': {\n    translation: 'Sack',\n    plural: '-Säcke',\n    description: 'Тут что-то про мешки',\n    expressions: [\n      'die Katze im Sack kaufen',\n      'mit Sack und Pack'\n    ],\n    imgQuery: 'sack',\n  },\n};\n\nexport default ruDe;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './styles.module.scss';\n\nconst LinkButton = ({ onClick, className, children, ...restProps }) => (\n  <a\n    className={classNames(className, styles.linkButton)}\n    href=\"/\"\n    {...restProps}\n    onClick={(event) => {\n      event.preventDefault();\n      if (onClick) {\n        onClick();\n      }\n    }}>\n    {children}\n  </a>\n);\n\nexport default LinkButton;\n","import React from 'react';\nimport LinkButton from '../link-button';\nimport { shuffle } from 'lodash-es';\nimport { Transition, animated } from 'react-spring/renderprops';\nimport styles from './styles.module.scss';\n\nclass SuggestedWords extends React.Component {\n  static defaultProps = {\n    count: 4\n  };\n\n  state = {\n    words: []\n  };\n\n  componentDidMount() {\n    this.showRandomizedWords();\n    setInterval(this.showRandomizedWords, 3000);\n  }\n\n  showRandomizedWords = () => {\n    const { wordToExclude, dictionary, count } = this.props;\n    const wordsToTranslation = Object.keys(dictionary);\n    const filteredWords = wordsToTranslation.filter((word) => word !== wordToExclude);\n    const updatedWords = shuffle(filteredWords).slice(0, count);\n    this.setState({ words: updatedWords });\n  };\n\n  render() {\n    const { words } = this.state;\n    const { onWordChange } = this.props;\n\n    return (\n      <div className={styles.suggestedWords}>\n        <h3>Suggested words</h3>\n          <ul style={{ overflow: 'hidden' }}>\n            <Transition\n              config={{\n                duration: 200\n              }}\n              items={words}\n              from={{ top: 20, position: 'relative', opacity: 1 }}\n              enter={{ top: 0 }}\n              leave={{ height: 0, top: -20, opacity: 0 }}>\n              {word => props => (\n                <animated.div key={word} style={props}>\n                  <li>\n                    <LinkButton onClick={() => onWordChange(word)}>\n                      {word}\n                    </LinkButton>\n                  </li>\n                </animated.div>\n              )}\n            </Transition>\n          </ul>\n       </div>\n    );\n  }\n};\n\nexport default SuggestedWords;\n","import ruDeDict from '../dictionaries/ru-de';\nimport deRuDict from '../dictionaries/de-ru';\n\nexport const isWordInAnyDictionary = (word) => {\n  const lowerCaseWord = word.toLowerCase();\n\n  return isWordInDictionary(lowerCaseWord, ruDeDict) ||\n    isWordInDictionary(lowerCaseWord, deRuDict);\n};\n\nconst isWordInDictionary = (word, dictionary) => word in dictionary;\n\nexport const getTranslationDetails = (word) => {\n  const lowercaseWord = word.toLowerCase();\n  return ruDeDict[lowercaseWord] || deRuDict[lowercaseWord]\n};\n\nexport const getTranslation = (word) => {\n  return getTranslationDetails(word).translation;\n};\n","import React from 'react';\nimport styles from './styles.module.scss';\n\nconst Tooltip = ({ children, text }) => (\n  <span className={styles.tooltipContainer}>\n    <div className={styles.tooltip}>\n      {text}\n    </div>\n    {children}\n  </span>\n);\n\nexport default Tooltip;\n","import React from 'react';\nimport Tooltip from '../tooltip';\nimport { getTranslation } from '../../utils/dictionary';\n\nconst TranslationTooltip = ({ word, children }) => (\n  <Tooltip text={getTranslation(word)}>\n    {children}\n  </Tooltip>\n);\n\nexport default TranslationTooltip;\n","import React from 'react';\nimport LinkButton from '../../components/link-button';\nimport { isWordInAnyDictionary } from '../../utils/dictionary';\nimport TranslationTooltip from '../translation-tooltip';\nimport styles from './styles.module.scss';\n\nexport const Sentence = ({ sentence, onWordChange, imgQuery }) => {\n  const words = sentence.split(/[\\s,.]+/)\n\n  return (\n    <div>\n      {words.map((word, index) => {\n        const isInDictionary = isWordInAnyDictionary(word);\n\n        if (isInDictionary) {\n          return (\n            <LinkButton\n              onClick={() => onWordChange(word)}\n              className={styles.word}\n              key={index}>\n              <TranslationTooltip word={word}>\n                {word}\n              </TranslationTooltip>\n            </LinkButton>\n          );\n        }\n\n        return (\n          <span className={styles.word} key={index}>\n            {word}\n          </span>\n        );\n      })}\n    </div>\n  )\n};\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.unsplash.com',\n  headers: {\n    Authorization: 'Client-ID 95aaf71ffaa899878c170fe8a27099f998056961a3117147d45abf6a678a7439'\n  }\n});\n","import React from 'react';\nimport classNames from 'classnames';\n\nconst Spinner = ({ className }) => (\n  <i className={classNames('spin fa fa-spinner', className)}></i>\n);\n\nexport default Spinner;\n","import React from 'react';\nimport classNames from 'classnames';\nimport unsplash from '../../api/unsplash';\nimport Spinner from '../spinner';\nimport styles from './styles.module.scss';\n\nclass ImageCard extends React.Component {\n  state = { \n    image: null,\n    loading: true\n  };\n\n  onShowUnsplashImg = async (imageQuery) => {\n    this.setState({\n      loading: true,\n      image: null\n    });\n    const response = await unsplash.get('/search/photos', {\n      params: { query: imageQuery }\n    });\n\n    this.setState({ \n      image: response.data.results[0]\n    });\n  };\n\n  onImageLoaded = () => {\n    this.setState({\n      loading: false\n    });\n  };\n\n  componentDidMount() {\n    const { imageQuery } = this.props;\n    this.onShowUnsplashImg(imageQuery);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { imageQuery } = this.props;\n    if (imageQuery !== prevProps.imageQuery) {\n      this.onShowUnsplashImg(imageQuery);\n    }\n  }\n\n  render () {\n    const { image, loading } = this.state;\n    const { className } = this.props;\n\n    return (\n      <div className={classNames(className, styles.imageCard)}>\n        {loading && (\n          <div className={styles.spinnerContainer}>\n            <Spinner />\n          </div>\n        )}\n        {image && (\n          <img\n            key={image.id}\n            alt={''}\n            src={image.urls.regular}\n            onLoad={this.onImageLoaded} />\n        )}\n      </div>\n    );\n  }\n};\n\nexport default ImageCard;\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport LinkButton from '../link-button';\nimport { Sentence } from '../sentence'; \nimport { getTranslationDetails } from '../../utils/dictionary';\nimport ImageCard from '../image-card';\nimport styles from './styles.module.scss';\n\nconst DictionaryApp = ({ className, word, onWordChange }) => {\n  const wordDetails = getTranslationDetails(word);\n  const [ isImageShown, setIsImageShown ] = useState(false);\n\n  const onIsImageShownToggle = () => {\n    setIsImageShown(!isImageShown);\n  };\n\n  return (\n    <div className={classNames(styles.dictionaryApp, className)}>\n      {wordDetails && (\n        <div>\n          <div className={styles.mainTranslationSection}>\n            <div className={styles.left}>\n              <div className={styles.translationSection}>\n                <h3>Translation</h3>\n                <LinkButton onClick={() => onWordChange(wordDetails.translation)} >\n                  {wordDetails.translation}\n                </LinkButton>\n                {wordDetails.plural && (\n                  <span>&nbsp;({wordDetails.plural})</span>\n                )}\n                {wordDetails.imgQuery && (\n                  <LinkButton onClick={onIsImageShownToggle}>\n                    &nbsp;<i className=\"far fa-image\" />\n                  </LinkButton>\n                )}\n              </div>\n\n              <div className={styles.translationSection}>\n                <h3>Description</h3>\n                {wordDetails.description}\n              </div>\n            </div>\n            {isImageShown && wordDetails.imgQuery && (\n              <ImageCard className={styles.imageCard} imageQuery={wordDetails.imgQuery} />\n            )}\n          </div>\n\n          {wordDetails.expressions && (\n            <div className={styles.translationSection}>\n              <h3>Expressions</h3>\n                <div>\n                  <ul>\n                    {wordDetails.expressions.map(sentence => (\n                      <li key={sentence}>\n                        <Sentence \n                          sentence={sentence}\n                          onWordChange={onWordChange}\n                          imgQuery={wordDetails.imgQuery}/>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {!wordDetails && word !== '' && (\n        <div className={classNames('errorMessage', styles.noWordMessage)}>\n          Sorry, we don't have such a word in our dictionary\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DictionaryApp;\n","import React from 'react';\nimport deRuDict from '../../dictionaries/de-ru';\nimport ruDeDict from '../../dictionaries/ru-de';\nimport SuggestedWords from '../suggested-words';\nimport DictionaryApp from '../dictionary-app';\nimport styles from './styles.module.scss';\n\nconst ENTER_KEY_CODE = 13;\n\nclass App extends React.Component {\n\n  state = { inputText: '', wordToTranslate: 'hund', suggestedWord: '' };\n\n  onChange = (event) => {\n    const value = event.target.value;\n    this.setState({ inputText: value })\n  };\n\n  checkTranslation = (event) => {\n    this.setState({ wordToTranslate: this.state.inputText })\n  };\n\n  onKeyUp = (event) => {\n    if (event.keyCode === ENTER_KEY_CODE) {\n      this.checkTranslation();\n    }\n  };\n\n  onWordChange = (word) => {\n    this.setState({ inputText: word, wordToTranslate: word });\n  };\n\n  render () {\n    const { wordToTranslate } = this.state;\n\n    return(\n      <div className={styles.app}>\n        <div className={styles.dictionaryContainer}>\n          <div className={styles.wordInputContainer}>\n            <input\n              className={styles.wordInput}\n              spellCheck={false}\n              placeholder=\"Word to translate\"\n              value={this.state.inputText}\n              onKeyUp={this.onKeyUp}\n              onChange={this.onChange} />\n              &emsp;\n            <button onClick={this.checkTranslation}>Check translation</button>\n          </div>\n          <DictionaryApp\n            className={styles.dictionary}\n            word={wordToTranslate}\n            onWordChange={this.onWordChange}/>\n        </div>\n\n        <div className={styles.right}>\n          <SuggestedWords\n            dictionary={deRuDict}\n            wordToExclude={wordToTranslate}\n            onWordChange={this.onWordChange} />\n\n          <SuggestedWords\n            dictionary={ruDeDict}\n            wordToExclude={wordToTranslate}\n            onWordChange={this.onWordChange} />\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './index.scss';\n\nReactDOM.render(\n  <App />, document.querySelector('#root')\n);\n"],"sourceRoot":""}